# A picture/video management webserver
# found using: https://www.reddit.com/r/selfhosted/comments/nrzum3/piwigo_lychee_pingvin-share_librephotos_your_final/
{ config, lib, pkgs, inputs, system, ... }: let
  cfg = config.my.services.pingvin-share;
  domain-prefix = "file";
  domain = config.networking.domain;
in {
  options.my.services.pingvin-share = with lib; {
    enable = mkEnableOption "pingvin file share service";

    frontend-port = mkOption {
      type = types.port;
      default = 9051;
      description = "Internal port for frontend";
    };

    backend-port = mkOption {
      type = types.port;
      default = 9052;
      description = "Internal port for backend";
    };

    public-address = mkOption {
      type = types.str;
      default = "${domain-prefix}.${config.networking.domain}";
      description = "Public address to be used for e.g. generating share links, without 'https://'.";
    };

    data-dir = mkOption {
      type = types.path;
      default = "/data/pingvin";
      description = "Internal pingvin storage";
    };

    frontend-package = mkOption {
      type = types.package;
      # default = pkgs.pingvin-share.frontend;
      default = inputs.nixpkgs-unstable.legacyPackages.${system}.pingvin-share.frontend;
      description = "frontend package to use";
    };
    
    backend-package = mkOption {
      type = types.package;
      # default = pkgs.pingvin-share.backend;
      default = inputs.nixpkgs-unstable.legacyPackages.${system}.pingvin-share.backend;
      # seb: TODO need unstable package, because the regular `1.11.1` version:
      #  Environment variables loaded from prisma/.env
      # Prisma schema loaded from prisma/schema.prisma
      # Datasource "db": SQLite database "pingvin-share.db" at "file:/data/pingvin/pingvin-share.db?connection_limit=1"
        # Error: Error in RPC
        #  Request: {
        #   "id": 1,
        #   "jsonrpc": "2.0",
        #   "method": "listMigrationDirectories",
        #   "params": {
        #     "migrationsDirectoryPath": "/nix/store/srhj1phr8bmvwmz4174n8hp8v079aq0j-pingvin-share-backend-1.11.1/prisma/migrations"
        #   }
        # }
        # Response: {
        #   "jsonrpc": "2.0",
        #   "error": {
        #     "code": -32601,
        #     "message": "Method not found"
        #   },
        #   "id": 1
        # }
        # Method not found
      # But now in `1.13.0`:
        # response: {
        #   status: 404,
        #   statusText: 'Not Found',
        #   headers: Object [AxiosHeaders] {
        #     server: 'nginx',
        #     date: 'Tue, 10 Jun 2025 13:34:12 GMT',
        #     'content-type': 'application/json; charset=utf-8',
        #     'content-length': '71',
        #     connection: 'keep-alive',
        #     'x-powered-by': 'Express',
        #     ...
      # And that with the exact right url of: https://file.h.mijn.place/api/configs (this produces a 404-like JSON response from the backend)
      # This package really is a piece of work.
      description = "backend package to use";
    };
    

    backup-routes = mkOption {
      type = with types; listOf str;
      description = "Restic backup routes to use for this data.";
    };

    backup-path = mkOption {
      type = types.path;
      default = "/data/pingvin-share/backups";
      description = "Backups database and metadata.";
    };
  };

  config = lib.mkIf cfg.enable {

    services.pingvin-share = {
      enable = true;
      frontend.port = cfg.frontend-port;
      frontend.package = cfg.frontend-package;
      backend.port = cfg.backend-port;
      backend.package = cfg.backend-package;
      hostname = cfg.public-address;
      https = true;
      nginx.enable = false; # we handle this ourselves.
      openFirewall = false;
      dataDir = cfg.data-dir;
    };

    # Set-up directories
    systemd.tmpfiles.rules = [ "d ${cfg.data-dir} 0770 ${config.services.pingvin-share.user} ${config.services.pingvin-share.group}  -" ];


    # seb TODO: it seems the index db is not generated by pingvin-share, so not backed up...
    # When executing: /nix/store/5yv0z6rk11crhi7pja2fwf0z9xwyvaby-pingvin-share-manage backup -i -f
    # output: empty .sql file, 0B, with error: ERRO[2025-06-04T00:33:39+02:00] failed to create database backup: exec: no command 
    # 
    my.services.backup.routes = lib.my.toAttrsUniform cfg.backup-routes { paths = [ cfg.data-dir ]; };

    my.services.nginx.virtualHosts.${domain-prefix} = {
      port = cfg.frontend-port;
      extraConfig = {
        locations."/" = {
          proxyPass = "http://127.0.0.1:${toString cfg.frontend-port}/";
          extraConfig = ''
            client_max_body_size 0;
          ''; # allow any size files to be uploaded.
        };
        locations."/api" = {
          proxyPass = "http://127.0.0.1:${toString cfg.backend-port}/";
        };
      };
    };
  };
}
