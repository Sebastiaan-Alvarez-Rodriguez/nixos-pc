diff --git a/music_assistant/providers/snapcast/__init__.py b/music_assistant/providers/snapcast/__init__.py
index 015b9a7f..10a452da 100644
--- a/music_assistant/providers/snapcast/__init__.py
+++ b/music_assistant/providers/snapcast/__init__.py
@@ -66,6 +66,8 @@ CONF_SERVER_TRANSPORT_CODEC = "snapcast_server_built_in_codec"
 CONF_SERVER_SEND_AUDIO_TO_MUTED = "snapcast_server_built_in_send_muted"
 CONF_STREAM_IDLE_THRESHOLD = "snapcast_stream_idle_threshold"
 
+CONF_STREAM_PORT_START = "snapcast_stream_port_start"
+CONF_STREAM_PORT_END = "snapcast_stream_port_end"
 
 CONF_CATEGORY_GENERIC = "generic"
 CONF_CATEGORY_ADVANCED = "advanced"
@@ -83,6 +85,8 @@ CONF_ENTRY_SAMPLE_RATES_SNAPCAST = create_sample_rates_config_entry(
 DEFAULT_SNAPSERVER_IP = "127.0.0.1"
 DEFAULT_SNAPSERVER_PORT = 1705
 DEFAULT_SNAPSTREAM_IDLE_THRESHOLD = 60000
+DEFAULT_STREAM_PORT_START = 4953
+DEFAULT_STREAM_PORT_END = 5153
 
 MASS_STREAM_PREFIX = "Music Assistant - "
 MASS_ANNOUNCEMENT_POSTFIX = " (announcement)"
@@ -264,6 +268,26 @@ async def get_config_entries(
             required=True,
             category=CONF_CATEGORY_ADVANCED,
         ),
+        ConfigEntry(
+            key=CONF_STREAM_PORT_START,
+            type=ConfigEntryType.INTEGER,
+            default_value=DEFAULT_STREAM_PORT_START,
+            label="Music-assistant stream port range start (1 port used for each stream)",
+            required=False,
+            category=(
+                CONF_CATEGORY_ADVANCED if local_snapserver_present else CONF_CATEGORY_GENERIC
+            ),
+        ),
+        ConfigEntry(
+            key=CONF_STREAM_PORT_END,
+            type=ConfigEntryType.INTEGER,
+            default_value=DEFAULT_STREAM_PORT_END,
+            label="Music-assistant stream port range end (1 port used for each stream)",
+            required=False,
+            category=(
+                CONF_CATEGORY_ADVANCED if local_snapserver_present else CONF_CATEGORY_GENERIC
+            ),
+        ),
     )
 
 
@@ -280,6 +304,15 @@ class SnapCastProvider(PlayerProvider):
     _ids_map: bidict  # ma_id / snapclient_id
     _stop_called: bool
 
+    def _get_port(self) -> int:
+        start = self.config.get_value(CONF_STREAM_PORT_START)
+        end = self.config.get_value(CONF_STREAM_PORT_END)
+        if start == end:
+            return start
+        if start > end:
+            start, end = end, start # user specified range counter-intuitively
+        return random.randint(start, end)
+
     def _get_snapclient_id(self, player_id: str) -> str:
         search_dict = self._ids_map
         return search_dict.get(player_id)
@@ -794,7 +827,7 @@ class SnapCastProvider(PlayerProvider):
         while attempts:
             attempts -= 1
             # pick a random port
-            port = random.randint(4953, 4953 + 200)
+            port = self._get_port()
             result = await self._snapserver.stream_add_stream(
                 # NOTE: setting the sampleformat to something else
                 # (like 24 bits bit depth) does not seem to work at all!
